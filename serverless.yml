service: screenshottr-service

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs6.10

  stage: bleeding
  region: eu-west-1

  environment:
    SS_STAGE: ${self:provider.stage}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "arn:aws:s3:::screenshottr-service-images-unprocessed-${self:provider.stage}*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::screenshottr-service-images-saved-${self:provider.stage}/*
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:eu-west-1:660773155982:table/screenshottr-service-uploads-${self:provider.stage}"
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:eu-west-1:660773155982:table/screenshottr-service-user-${self:provider.stage}"

functions:
  getSignedS3URL:
    handler: src/handler.getSignedS3URL
    events:
      - http: GET api/image/upload/getSignedS3URL
    memorySize: 128
  processUpload:
    handler: src/handler.processUpload
    events:
      - s3: screenshottr-service-images-unprocessed-${self:provider.stage}
        memorySize: 256
  getMetadata:
    handler: src/handler.getMetadata
    events:
      - http: GET api/image/getImageMetadata
    memorySize: 128
  createUser:
    handler: src/handler.createUser
    events:
      - http: GET api/user/createUser
    memorySize: 128

resources:
 Resources:
    savedBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: screenshottr-service-images-saved-${self:provider.stage}

    uploadedBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: screenshottr-service-images-uploaded-${self:provider.stage}

    uploadsDynamo:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: screenshottr-service-uploads-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: image_id
            AttributeType: S
        KeySchema:
          - AttributeName: image_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2

    usersDynamo:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: screenshottr-service-user-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: user_name
            AttributeType: S
        KeySchema:
          - AttributeName: user_name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    userTokensDynamo:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: screenshottr-service-user-tokens-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
